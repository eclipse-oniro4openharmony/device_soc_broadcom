# Copyright (c) 2023 Diemit <598757652@qq.com>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")

group("display_buffer_model") {
  deps = [
    ":libdisplay_buffer_vdi_impl",
  ]
}

ohos_shared_library("libdisplay_buffer_vdi_impl") {
  sources = [ 
    "//drivers/peripheral/display/buffer/vdi_base/src/display_buffer_vdi_impl.cpp",
    # "//drivers/peripheral/display/buffer/vdi_base/src/display_gralloc_gbm.cpp",
    # "//drivers/peripheral/display/buffer/vdi_base/src/hi_gbm.cpp"

    # "src/display_gralloc/display_buffer_vdi_impl.cpp",
    "src/display_gralloc/display_gralloc_gbm.cpp",
    "src/display_gralloc/hi_gbm.cpp"
    ]

  include_dirs = [
    "include",
    "//drivers/peripheral/display/buffer/vdi_base/include",

    "//drivers/peripheral/base",
    "//drivers/interface/display/composer/hdifd_parcelable",
    "//drivers/interface/display/buffer",
    "//drivers/peripheral/display/utils/include",
    "//drivers/peripheral/display/buffer/hdi_service/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",

  ]

  output_name = "libdisplay_buffer_vdi_impl"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
  ]
    deps = [
    "//third_party/libdrm:libdrm",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  innerapi_tags = [ "passthrough" ]
  part_name = "device_rpi4"
}


group("display_composer_model") {
  deps = [
    ":display_gfx",
    ":libdisplay_composer_vdi_impl",
  ]
}
ohos_shared_library("libdisplay_composer_vdi_impl") {
  sources = [
    "//drivers/peripheral/display/composer/vdi_base/src/display_composer_vdi_impl.cpp",

    "src/display_device/hdi_gfx_composition.cpp",
    # "//drivers/peripheral/display/composer/vdi_base/src/hdi_gfx_composition.cpp",

    "//drivers/peripheral/display/composer/vdi_base/src/hdi_composer.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/hdi_device_interface.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/hdi_display.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/hdi_layer.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/hdi_session.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/hdi_netlink_monitor.cpp",

    "//drivers/peripheral/display/composer/vdi_base/src/drm_connector.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/drm_crtc.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/drm_device.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/drm_display.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/drm_encoder.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/drm_plane.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/drm_vsync_worker.cpp",
    "//drivers/peripheral/display/composer/vdi_base/src/hdi_drm_layer.cpp",
    # "//drivers/peripheral/display/composer/vdi_base/src/hdi_drm_composition.cpp",
    "src/display_device/hdi_drm_composition.cpp",

  ]
  output_name = "libdisplay_composer_vdi_impl"
  include_dirs = [
    "//drivers/peripheral/display/buffer/vdi_base/include",
    "//drivers/peripheral/display/composer/vdi_base/include",
    "//drivers/peripheral/display/buffer/hdi_service/include",
    "//drivers/peripheral/display/composer/hdi_service/include",
    "//drivers/peripheral/display/utils/include",
    "//drivers/peripheral/base",
    "//drivers/interface/display/composer",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//drivers/interface/display/composer/hdifd_parcelable",
  ]

  deps = [
    ":libdisplay_buffer_vdi_impl",
    # "//drivers/peripheral/display/buffer/vdi_base:display_buffer_vdi_impl_default",
    "//third_party/libdrm:libdrm",
  ]

  cflags_cc = [
    "-Wno-error=unused-function",
    "-Wno-error=missing-braces",
    "-Wno-error=#warnings",
    "-Wno-error=unused-const-variable",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "graphic_surface:buffer_handle",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",

  ]
  install_enable = true
  install_images = [ chipset_base_dir ]
  part_name = "device_rpi4"
}

ohos_shared_library("display_gfx") {
  sources = [ 
  "//drivers/peripheral/display/hal/default/display_gfx.c"
   ]
  include_dirs = [
    "//drivers/peripheral/display/hal/",
    "//drivers/peripheral/display/interfaces/include",
    "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    "//drivers/peripheral/base",
  ]
  deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
  output_name = "display_gfx"
  cflags = [ "-Wno-macro-redefined" ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  part_name = "device_rpi4"
}
