# Copyright (C) 2021-2022 HiHope Open Source Organization .
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("display_group") {
  deps = [
    ":display_device",
    ":display_gfx",
    ":display_gralloc",
    ":higbm",
  ]
}

ohos_static_library("higbm") {
  sources = [ "src/display_gralloc/hi_gbm.c" ]
  include_dirs = [ "include" ]
  output_name = "higbm"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
  ]
  deps = [ "//third_party/libdrm:libdrm" ]
  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]
  subsystem_name = "hdf"
  part_name = "display_device_driver"
}

ohos_shared_library("display_gralloc") {
  sources = [
    "src/display_gralloc/display_gralloc.c",
    "src/display_gralloc/display_gralloc_gbm.c",
  ]
  include_dirs = [
    "include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
  ]
  output_name = "display_gralloc"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
  ]
  deps = [
    ":higbm",
    "//third_party/libdrm:libdrm",
  ]

  external_deps = [
    "device_driver_framework:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "display_device_driver"
}

config("display_device_pub_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "src/display_device",
    "include",
  ]
}

ohos_shared_library("display_gfx") {
  sources = [ "src/display_gfx/display_gfx.c" ]
  include_dirs = [
    "include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/adapter/osal/include/",
    "//utils/native/base/include",
    "//foundation/graphic/standard/utils/include",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
  ]
  output_name = "display_gfx"
  cflags = [ "-Wno-macro-redefined" ]
  deps = [
    ":display_gralloc",
    "//utils/native/base:utils",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "display_device_driver"
}

ohos_shared_library("display_device") {
  sources = [
    "src/display_device/composer/hdi_composer.cpp",
    "src/display_device/composer/hdi_gfx_composition.cpp",
    "src/display_device/composer/hdi_video_composition.cpp",
    "src/display_device/core/hdi_device_interface.cpp",
    "src/display_device/core/hdi_display.cpp",
    "src/display_device/core/hdi_layer.cpp",
    "src/display_device/core/hdi_session.cpp",
    "src/display_device/drm/drm_connector.cpp",
    "src/display_device/drm/drm_crtc.cpp",
    "src/display_device/drm/drm_device.cpp",
    "src/display_device/drm/drm_display.cpp",
    "src/display_device/drm/drm_encoder.cpp",
    "src/display_device/drm/drm_plane.cpp",
    "src/display_device/drm/drm_vsync_worker.cpp",
    "src/display_device/drm/hdi_drm_composition.cpp",
    "src/display_device/drm/hdi_drm_layer.cpp",
    "src/display_device/fbdev/fb_composition.cpp",
    "src/display_device/fbdev/fb_device.cpp",
    "src/display_device/fbdev/fb_display.cpp",
    "src/display_device/vsync/sorft_vsync.cpp",
    "src/utils/display_adapter.cpp",
  ]
  public_configs = [ ":display_device_pub_config" ]

  output_name = "display_device"

  include_dirs = [
    "src/display_device",
    "include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "src/display_device/drm",
    "src/display_device/fbdev",
    "src/display_device/core",
    "src/display_device/composer",
    "src/utils",
  ]

  deps = [
    ":display_gralloc",
    ":display_layer_video",
    "//third_party/libdrm:libdrm",
  ]

  cflags = [ "-Wno-unused-function" ]

  external_deps = [
    "device_driver_framework:libhdf_utils",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "utils_base:utils",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "display_device_driver"
}

ohos_shared_library("display_layer_video") {
  sources = [ "src/display_layer_video/display_layer_video.cpp" ]
  public_configs = [ ":display_device_pub_config" ]

  output_name = "display_layer_video"
  include_dirs = [
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/hdi_service/video_layer/client",
    "//drivers/adapter/uhdf2/include/hdi",
  ]

  external_deps = [
    "device_driver_framework:libhdf_host",
    "device_driver_framework:libhdf_ipc_adapter",
    "device_driver_framework:libhdf_utils",
    "device_driver_framework:libhdi",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
    "utils_base:utils",
  ]

  public_deps = [ "//drivers/peripheral/display/hdi_service/video_layer/client:video_layer_client" ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "display_device_driver"
}

group("display_layer") {
  deps = [
    ":display_device",
    ":display_gfx",
    ":display_gralloc",
    ":higbm",
  ]
}
